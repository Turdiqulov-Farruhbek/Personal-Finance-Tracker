// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AccountCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Delete Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List accounts with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Currency",
                        "name": "currency",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum Balance",
                        "name": "balanceMin",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum Balance",
                        "name": "balanceMax",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "schema": {
                            "$ref": "#/definitions/genproto.AccounList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/update/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account update data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AccountUpt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account data",
                        "schema": {
                            "$ref": "#/definitions/genproto.AccountGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budgets/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Create Budget",
                "parameters": [
                    {
                        "description": "Budget data",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budgets/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a budget by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Delete Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Budget not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budgets/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of budgets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "List Budgets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum Amount",
                        "name": "amount_from",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum Amount",
                        "name": "amount_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Budget Period",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of budgets",
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budgets/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a budget by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget details",
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Budget not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Update Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Budget data",
                        "name": "budget",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List Categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/genproto.CategoryList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "$ref": "#/definitions/genproto.CategoryGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CategoryCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goals/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new goal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Create Goal",
                "parameters": [
                    {
                        "description": "Goal data",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goals/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of goals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "List Goals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Goal Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Goal Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Target Amount From",
                        "name": "target_from",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Target Amount To",
                        "name": "target_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deadline From",
                        "name": "deadline_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deadline To",
                        "name": "deadline_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goals/{goal_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a goal by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Get Goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "goal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal details",
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Goal not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing goal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Update Goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "goal_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Goal data",
                        "name": "goal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalUpt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a goal by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Delete Goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "goal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Goal not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Create Notification",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "List Notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Receiver ID",
                        "name": "reciever_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Notification Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sender ID",
                        "name": "sender_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/notify-all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Send a notification to all users in the target group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Notify All",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification sent successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notifications/{notification_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a notification by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification details",
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Update Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.NotificationUpt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a notification by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Delete Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/budget-performance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve budget performance metrics for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get Budget Performance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget performance retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetPerGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/goal-progress": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve goal progress metrics for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get Goal Progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal progress retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalProgresGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/incomes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve incomes for a user within a date range and optional category filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get Incomes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "date_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Incomes retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.IncomeGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/spendings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve spendings for a user within a date range and optional category filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get Spendings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "date_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "date_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.SpendingGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transactions/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new transaction for a user account and write to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction creation details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.TransactionCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transactions/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of transactions based on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List transactions with filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time From",
                        "name": "time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time To",
                        "name": "time_to",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Amount From",
                        "name": "amount_from",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Amount To",
                        "name": "amount_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.TransactionList"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a transaction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.TransactionGet"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a transaction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transactions/{transaction_id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a transaction by its ID and write to Kafka",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "name": "AccountId",
                        "in": "path"
                    },
                    {
                        "type": "number",
                        "name": "Amount",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "name": "CategoryId",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "name": "Description",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "name": "Type",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genproto.AccounList": {
            "type": "object",
            "properties": {
                "Accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.AccountGet"
                    }
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "genproto.AccountCreate": {
            "type": "object",
            "properties": {
                "Currency": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.AccountGet": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "genproto.AccountUpt": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "genproto.BudgetCreate": {
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "number"
                },
                "CategoryId": {
                    "type": "string"
                },
                "EndDate": {
                    "type": "string"
                },
                "Period": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.BudgetGet": {
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "number"
                },
                "CategoryId": {
                    "type": "string"
                },
                "EndDate": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Period": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.BudgetList": {
            "type": "object",
            "properties": {
                "Budgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.BudgetGet"
                    }
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "genproto.BudgetPerGet": {
            "type": "object",
            "properties": {
                "Performances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.PeriodBudgetPer"
                    }
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.CategoryCreate": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.CategoryGet": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.CategoryList": {
            "type": "object",
            "properties": {
                "Get": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.CategoryGet"
                    }
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "Total": {
                    "type": "integer"
                }
            }
        },
        "genproto.GoalCreate": {
            "type": "object",
            "properties": {
                "CurrentAmount": {
                    "type": "number"
                },
                "Deadline": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "TargetAmount": {
                    "type": "number"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.GoalGet": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "CurrentAmount": {
                    "type": "number"
                },
                "Deadline": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "TargetAmount": {
                    "type": "number"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.GoalList": {
            "type": "object",
            "properties": {
                "Goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.GoalGet"
                    }
                },
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "genproto.GoalProgresGet": {
            "type": "object",
            "properties": {
                "Goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.GoalProgress"
                    }
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.GoalProgress": {
            "type": "object",
            "properties": {
                "CurrentAmount": {
                    "type": "number"
                },
                "Deadline": {
                    "type": "string"
                },
                "GoalName": {
                    "type": "string"
                },
                "Progress": {
                    "type": "string"
                },
                "TargetAmount": {
                    "type": "number"
                }
            }
        },
        "genproto.GoalUpt": {
            "type": "object",
            "properties": {
                "CurrentAmount": {
                    "type": "number"
                },
                "Deadline": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "TargetAmount": {
                    "type": "number"
                }
            }
        },
        "genproto.IncomeGet": {
            "type": "object",
            "properties": {
                "CategoryId": {
                    "type": "string"
                },
                "DateFrom": {
                    "type": "string"
                },
                "DateTo": {
                    "type": "string"
                },
                "TotalAmount": {
                    "type": "number"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationCreate": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "RecieverId": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationGet": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationList": {
            "type": "object",
            "properties": {
                "Limit": {
                    "type": "integer"
                },
                "Notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.NotificationGet"
                    }
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "genproto.NotificationMessage": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "SenderId": {
                    "type": "string"
                },
                "TargetGroup": {
                    "type": "string"
                }
            }
        },
        "genproto.NotificationUpt": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                }
            }
        },
        "genproto.PeriodBudgetPer": {
            "type": "object",
            "properties": {
                "AvgSpendings": {
                    "type": "number"
                },
                "EndDate": {
                    "type": "string"
                },
                "Period": {
                    "type": "string"
                },
                "Progress": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string"
                },
                "TargetAmount": {
                    "type": "number"
                }
            }
        },
        "genproto.SpendingGet": {
            "type": "object",
            "properties": {
                "CategoryId": {
                    "type": "string"
                },
                "DateFrom": {
                    "type": "string"
                },
                "DateTo": {
                    "type": "string"
                },
                "ToatalAmount": {
                    "type": "number"
                },
                "Transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.TransactionGet"
                    }
                },
                "Userid": {
                    "type": "string"
                }
            }
        },
        "genproto.TransactionCreate": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "type": "string"
                },
                "Amount": {
                    "type": "number"
                },
                "CategoryId": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.TransactionGet": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "type": "string"
                },
                "Amount": {
                    "type": "number"
                },
                "CategoryId": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Time": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "genproto.TransactionList": {
            "type": "object",
            "properties": {
                "Limit": {
                    "type": "integer"
                },
                "Offset": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                },
                "TransactionGet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.TransactionGet"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Finance Tracker API Documentation",
	Description:      "API for Instant Delivery resources",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
